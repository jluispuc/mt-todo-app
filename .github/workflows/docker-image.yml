name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    #- name: Build the Docker image
    #  run: docker build . --file Dockerfile --tag mt-todo-app:$(date +%s)

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }} #this save in project settings > secrets
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker Metadata for Final Image Build
      id: docker_meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ vars.DOCKERHUB_PROFILE }}/mt-todo-app
        flavor: |
          latest=false
        tags: |
          type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
        # type=raw,value=gha-${{ github.run_id }},enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
    
    - name: Build and push container image to registry (Docker Hub)
      uses: docker/build-push-action@v5
      with: 
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64,linux/arm/v7
  # https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-cli%2Cwindows#create-a-service-principal
  # https://github.com/marketplace/actions/azure-cli-action
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI script
      uses: azure/cli@v2
      with:
        azcliversion: 2.59.0
        inlineScript: |
          az containerapp delete -g networking2_rg -n mt-todo-app --yes
          az containerapp create --name mt-todo-app --resource-group networking2_rg --environment managedEnvironment-networking2rg-b290 --image luispuc/mt-todo-app --target-port 80 --ingress 'external' --cpu 0.25 --memory '0.5Gi'